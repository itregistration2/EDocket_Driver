import React, { useContext } from 'react';
import { Animated, View, } from 'react-native';
import AnimatedScreenContext from '../AnimatedScreenContext';
const AnimatedScreenScrollView = ({ animatedStyle, children, style, scrollViewRef, ...scrollViewProps }) => {
    const { scrollY, onScroll, headerMaxHeight, headerMinHeight, disableParallaxEffect, } = useContext(AnimatedScreenContext);
    const offSet = disableParallaxEffect
        ? headerMaxHeight + headerMinHeight
        : headerMinHeight;
    const handleScroll = (e) => {
        if (onScroll) {
            onScroll(e);
        }
        scrollY.setValue(e.nativeEvent.contentOffset.y);
    };
    return (React.createElement(Animated.ScrollView, Object.assign({ ref: scrollViewRef, onScroll: handleScroll, showsVerticalScrollIndicator: false, scrollEventThrottle: 16, bounces: false, style: [
            animatedStyle && animatedStyle(scrollY),
            {
                paddingTop: scrollY.interpolate({
                    inputRange: [0, headerMaxHeight],
                    outputRange: [headerMaxHeight, offSet],
                    extrapolate: 'clamp',
                }),
            },
            style,
        ] }, scrollViewProps),
        children,
        React.createElement(View, { style: { height: offSet } })));
};
export default React.memo(AnimatedScreenScrollView);
