import React, { useContext, useState, useMemo, useCallback } from 'react';
import { Animated, View, } from 'react-native';
import AnimatedScreenContext from '../AnimatedScreenContext';
const AnimatedScreenSectionList = ({ animatedStyle, style, ListFooterComponent = () => null, sectionlistRef, ...sectionListProps }) => {
    const [contentHeight, setContentHeight] = useState(0);
    const [containerHeight, setContainerHeight] = useState(0);
    const { scrollY, onScroll, headerMaxHeight, headerMinHeight } = useContext(AnimatedScreenContext);
    const shouldScroll = useMemo(() => contentHeight > containerHeight - headerMaxHeight, [contentHeight, containerHeight, headerMaxHeight]);
    const handleSetContent = useCallback((_, height) => setContentHeight(height), []);
    const handleSetContainer = useCallback(e => setContainerHeight(e.nativeEvent.layout.height), []);
    const contentStyle = useMemo(() => ({
        minHeight: shouldScroll ? containerHeight + headerMaxHeight : undefined,
    }), [shouldScroll, containerHeight, headerMaxHeight]);
    const handleScroll = (e) => {
        if (onScroll) {
            onScroll(e);
        }
        scrollY.setValue(e.nativeEvent.contentOffset.y);
    };
    return (React.createElement(React.Fragment, null,
        React.createElement(Animated.SectionList, Object.assign({ ref: sectionlistRef, onScroll: handleScroll, scrollEventThrottle: 16, stickySectionHeadersEnabled: true, bounces: false, onLayout: handleSetContainer, onContentSizeChange: handleSetContent, contentContainerStyle: contentStyle, scrollEnabled: shouldScroll, ListFooterComponent: React.createElement(React.Fragment, null,
                React.createElement(ListFooterComponent, null),
                React.createElement(View, { style: { height: headerMinHeight } })), style: [
                animatedStyle && animatedStyle(scrollY),
                {
                    paddingTop: scrollY.interpolate({
                        inputRange: [0, headerMaxHeight],
                        outputRange: [headerMaxHeight, headerMinHeight],
                        extrapolate: 'clamp',
                    }),
                },
                style,
            ] }, sectionListProps))));
};
export default React.memo(AnimatedScreenSectionList);
